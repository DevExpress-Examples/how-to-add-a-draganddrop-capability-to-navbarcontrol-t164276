// Developer Express Code Central Example:
// How to add a DragAndDrop capability to NavBarControl
// 
// This example demonstrates how to add a DragAndDrop capability to
// NavBarControl.
// Our NavBarControl doesn't support drag and drop out of the box.
// To provide this capability in this sample, we subscribe to the NavBarControl's
// DragOver, Drop, PreviewMouseMove and PreviewMouseLeftButtonDown events. When
// PreviewMouseMove is raised, we check e.OriginalSource and the mouse left button
// state. If e.OriginalSource is a NavBarItemControl and the left button was
// pressed, we call DragDrop's DoDragDrop method. When DragOver is raised, we draw
// an adorner on a position to which we can move a selected NavBarItem. When Drop
// is raised, we calculate a position to which we must insert a selected
// NavBarItem.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=T164276

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NavBarDragDropExample.Properties
{


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
